// Generated by Dagger (https://dagger.dev).
package com.example.compass_aac.module;

import com.example.data.source.remote.UserSource;
import com.example.data.source.remote.UserSourceImpl;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserSourceModule_ProvideUserSourceFactory implements Factory<UserSource> {
  private final UserSourceModule module;

  private final Provider<UserSourceImpl> userSourceImplProvider;

  public UserSourceModule_ProvideUserSourceFactory(UserSourceModule module,
      Provider<UserSourceImpl> userSourceImplProvider) {
    this.module = module;
    this.userSourceImplProvider = userSourceImplProvider;
  }

  @Override
  public UserSource get() {
    return provideUserSource(module, userSourceImplProvider.get());
  }

  public static UserSourceModule_ProvideUserSourceFactory create(UserSourceModule module,
      Provider<UserSourceImpl> userSourceImplProvider) {
    return new UserSourceModule_ProvideUserSourceFactory(module, userSourceImplProvider);
  }

  public static UserSource provideUserSource(UserSourceModule instance,
      UserSourceImpl userSourceImpl) {
    return Preconditions.checkNotNullFromProvides(instance.provideUserSource(userSourceImpl));
  }
}
