// Generated by Dagger (https://dagger.dev).
package com.example.compass_aac.module;

import com.example.domain.repository.LocationRepository;
import com.example.domain.usecase.LocationUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UseCaseModule_ProvideLocationUseCaseFactory implements Factory<LocationUseCase> {
  private final Provider<LocationRepository> locationRepositoryProvider;

  public UseCaseModule_ProvideLocationUseCaseFactory(
      Provider<LocationRepository> locationRepositoryProvider) {
    this.locationRepositoryProvider = locationRepositoryProvider;
  }

  @Override
  public LocationUseCase get() {
    return provideLocationUseCase(locationRepositoryProvider.get());
  }

  public static UseCaseModule_ProvideLocationUseCaseFactory create(
      Provider<LocationRepository> locationRepositoryProvider) {
    return new UseCaseModule_ProvideLocationUseCaseFactory(locationRepositoryProvider);
  }

  public static LocationUseCase provideLocationUseCase(LocationRepository locationRepository) {
    return Preconditions.checkNotNullFromProvides(UseCaseModule.INSTANCE.provideLocationUseCase(locationRepository));
  }
}
