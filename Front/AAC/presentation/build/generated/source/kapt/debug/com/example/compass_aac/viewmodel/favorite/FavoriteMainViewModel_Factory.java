// Generated by Dagger (https://dagger.dev).
package com.example.compass_aac.viewmodel.favorite;

import com.example.domain.usecase.FavoriteUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FavoriteMainViewModel_Factory implements Factory<FavoriteMainViewModel> {
  private final Provider<FavoriteUseCase> useCaseProvider;

  public FavoriteMainViewModel_Factory(Provider<FavoriteUseCase> useCaseProvider) {
    this.useCaseProvider = useCaseProvider;
  }

  @Override
  public FavoriteMainViewModel get() {
    return newInstance(useCaseProvider.get());
  }

  public static FavoriteMainViewModel_Factory create(Provider<FavoriteUseCase> useCaseProvider) {
    return new FavoriteMainViewModel_Factory(useCaseProvider);
  }

  public static FavoriteMainViewModel newInstance(FavoriteUseCase useCase) {
    return new FavoriteMainViewModel(useCase);
  }
}
