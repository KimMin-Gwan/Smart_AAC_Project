// Generated by Dagger (https://dagger.dev).
package com.example.compass_aac.module;

import com.example.data.source.remote.LocationDataSource;
import com.example.data.source.remote.LocationDataSourceImpl;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataSourceModule_ProvideLocationSourceFactory implements Factory<LocationDataSource> {
  private final DataSourceModule module;

  private final Provider<LocationDataSourceImpl> locationDataSourceImplProvider;

  public DataSourceModule_ProvideLocationSourceFactory(DataSourceModule module,
      Provider<LocationDataSourceImpl> locationDataSourceImplProvider) {
    this.module = module;
    this.locationDataSourceImplProvider = locationDataSourceImplProvider;
  }

  @Override
  public LocationDataSource get() {
    return provideLocationSource(module, locationDataSourceImplProvider.get());
  }

  public static DataSourceModule_ProvideLocationSourceFactory create(DataSourceModule module,
      Provider<LocationDataSourceImpl> locationDataSourceImplProvider) {
    return new DataSourceModule_ProvideLocationSourceFactory(module, locationDataSourceImplProvider);
  }

  public static LocationDataSource provideLocationSource(DataSourceModule instance,
      LocationDataSourceImpl LocationDataSourceImpl) {
    return Preconditions.checkNotNullFromProvides(instance.provideLocationSource(LocationDataSourceImpl));
  }
}
