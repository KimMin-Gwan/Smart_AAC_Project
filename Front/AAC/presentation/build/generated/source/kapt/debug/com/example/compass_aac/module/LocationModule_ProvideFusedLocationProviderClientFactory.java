// Generated by Dagger (https://dagger.dev).
package com.example.compass_aac.module;

import android.content.Context;
import com.google.android.gms.location.FusedLocationProviderClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LocationModule_ProvideFusedLocationProviderClientFactory implements Factory<FusedLocationProviderClient> {
  private final LocationModule module;

  private final Provider<Context> contextProvider;

  public LocationModule_ProvideFusedLocationProviderClientFactory(LocationModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public FusedLocationProviderClient get() {
    return provideFusedLocationProviderClient(module, contextProvider.get());
  }

  public static LocationModule_ProvideFusedLocationProviderClientFactory create(
      LocationModule module, Provider<Context> contextProvider) {
    return new LocationModule_ProvideFusedLocationProviderClientFactory(module, contextProvider);
  }

  public static FusedLocationProviderClient provideFusedLocationProviderClient(
      LocationModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideFusedLocationProviderClient(context));
  }
}
