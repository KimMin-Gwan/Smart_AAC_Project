// Generated by Dagger (https://dagger.dev).
package com.example.compass_aac.viewmodel;

import com.example.domain.usecase.RegisterUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RegisterViewModel_Factory implements Factory<RegisterViewModel> {
  private final Provider<RegisterUseCase> usecaseProvider;

  public RegisterViewModel_Factory(Provider<RegisterUseCase> usecaseProvider) {
    this.usecaseProvider = usecaseProvider;
  }

  @Override
  public RegisterViewModel get() {
    return newInstance(usecaseProvider.get());
  }

  public static RegisterViewModel_Factory create(Provider<RegisterUseCase> usecaseProvider) {
    return new RegisterViewModel_Factory(usecaseProvider);
  }

  public static RegisterViewModel newInstance(RegisterUseCase usecase) {
    return new RegisterViewModel(usecase);
  }
}
