// Generated by Dagger (https://dagger.dev).
package com.example.compass_aac.module;

import com.example.data.source.remote.UserDataSource;
import com.example.data.source.remote.UserDataSourceImpl;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataSourceModule_ProvideUserSourceFactory implements Factory<UserDataSource> {
  private final DataSourceModule module;

  private final Provider<UserDataSourceImpl> userSourceImplProvider;

  public DataSourceModule_ProvideUserSourceFactory(DataSourceModule module,
      Provider<UserDataSourceImpl> userSourceImplProvider) {
    this.module = module;
    this.userSourceImplProvider = userSourceImplProvider;
  }

  @Override
  public UserDataSource get() {
    return provideUserSource(module, userSourceImplProvider.get());
  }

  public static DataSourceModule_ProvideUserSourceFactory create(DataSourceModule module,
      Provider<UserDataSourceImpl> userSourceImplProvider) {
    return new DataSourceModule_ProvideUserSourceFactory(module, userSourceImplProvider);
  }

  public static UserDataSource provideUserSource(DataSourceModule instance,
      UserDataSourceImpl userSourceImpl) {
    return Preconditions.checkNotNullFromProvides(instance.provideUserSource(userSourceImpl));
  }
}
