// Generated by Dagger (https://dagger.dev).
package com.example.compass_aac.module;

import com.example.domain.repository.VoiceRepository;
import com.example.domain.usecase.VoiceUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UseCaseModule_ProvideVoiceUseCaseFactory implements Factory<VoiceUseCase> {
  private final Provider<VoiceRepository> voiceRepositoryProvider;

  public UseCaseModule_ProvideVoiceUseCaseFactory(
      Provider<VoiceRepository> voiceRepositoryProvider) {
    this.voiceRepositoryProvider = voiceRepositoryProvider;
  }

  @Override
  public VoiceUseCase get() {
    return provideVoiceUseCase(voiceRepositoryProvider.get());
  }

  public static UseCaseModule_ProvideVoiceUseCaseFactory create(
      Provider<VoiceRepository> voiceRepositoryProvider) {
    return new UseCaseModule_ProvideVoiceUseCaseFactory(voiceRepositoryProvider);
  }

  public static VoiceUseCase provideVoiceUseCase(VoiceRepository voiceRepository) {
    return Preconditions.checkNotNullFromProvides(UseCaseModule.INSTANCE.provideVoiceUseCase(voiceRepository));
  }
}
